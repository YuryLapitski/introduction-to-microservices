version: '3.8'
services:
  resource-postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts-resource:/docker-entrypoint-initdb.d
    networks:
      - app-network

  song-postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - ./init-scripts-song:/docker-entrypoint-initdb.d
    networks:
      - app-network

  resource-service:
    build: ./resource-service
    ports:
      - "8080:8080"
    depends_on:
      - resource-postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://resource-postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network

  song-service:
    build: ./song-service
    ports:
      - "8081:8081"
    depends_on:
      - song-postgres
      - resource-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://song-postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

